export const POSTGRESQL: "POSTGRESQL";
export const MYSQL: "MYSQL";
export namespace SUPPORTED_DRIVERS {
    const POSTGRESQL: boolean;
    const MYSQL: boolean;
}
export const START_TRANSACTION: "BEGIN;";
export const COMMIT: "COMMIT;";
export const ROLLBACK: "ROLLBACK;";
export const IS_POSTGRES: true;
export namespace WHERE_CLAUSE_OPERATORS {
    const _in: string;
    const _any: string;
    const _nany: string;
    const _all: string;
    const _nin: string;
    const _contains: string;
    const _contained_in: string;
    const _key_exists: string;
    const _key_exists_any: string;
    const _key_exists_all: string;
    const _text_search: string;
    const _in_array: string;
    const _nin_array: string;
    const _and: string;
    const _or: string;
    const _lt: string;
    const _lte: string;
    const _gt: string;
    const _gte: string;
    const _is: string;
    const _is_not: string;
    const _like: string;
    const _ilike: string;
    const _eq: string;
    const _neq: string;
}
export namespace QUERY_BINDER_KEYS {
    const _and_1: boolean;
    export { _and_1 as _and };
    const _or_1: boolean;
    export { _or_1 as _or };
}
export namespace REQUIRE_ARRAY_TRANSFORMATION {
    const _any_1: boolean;
    export { _any_1 as _any };
    const _all_1: boolean;
    export { _all_1 as _all };
    const _in_1: boolean;
    export { _in_1 as _in };
    const _nin_1: boolean;
    export { _nin_1 as _nin };
}
export namespace REQUIRE_CAST_TO_NULL {
    const _is_1: boolean;
    export { _is_1 as _is };
    const _is_not_1: boolean;
    export { _is_not_1 as _is_not };
}
export namespace IS_JSON_OPERATOR {
    const _contains_1: boolean;
    export { _contains_1 as _contains };
    const _contained_in_1: boolean;
    export { _contained_in_1 as _contained_in };
    const _key_exists_1: boolean;
    export { _key_exists_1 as _key_exists };
    const _key_exists_any_1: boolean;
    export { _key_exists_any_1 as _key_exists_any };
    const _key_exists_all_1: boolean;
    export { _key_exists_all_1 as _key_exists_all };
}
export namespace IS_JSON_KEY_OPERATOR {
    const _key_exists_2: boolean;
    export { _key_exists_2 as _key_exists };
    const _key_exists_any_2: boolean;
    export { _key_exists_any_2 as _key_exists_any };
    const _key_exists_all_2: boolean;
    export { _key_exists_all_2 as _key_exists_all };
}
export namespace IS_JSON_ARRAY_KEY_OPERATOR {
    const _key_exists_any_3: boolean;
    export { _key_exists_any_3 as _key_exists_any };
    const _key_exists_all_3: boolean;
    export { _key_exists_all_3 as _key_exists_all };
}
export namespace REQUIRE_WILDCARD_TRANSFORMATION {
    const _ilike_1: boolean;
    export { _ilike_1 as _ilike };
    export const _nilike: boolean;
}
export namespace IS_TEXT_SEARCH_OPERATOR {
    const _text_search_1: boolean;
    export { _text_search_1 as _text_search };
}
export namespace sqlTypesByDbClient {
    const POSTGRESQL_1: ({
        name: string;
        value: string;
        canBeAutoIncrement: boolean;
        canBeReferencedInPrimaryKey: boolean;
        disabledPrimaryKey: boolean;
        canHaveDefaultValue: boolean;
        alias?: undefined;
        hasLength?: undefined;
        min?: undefined;
        max?: undefined;
        defaultSuggestions?: undefined;
    } | {
        name: string;
        value: string;
        alias: string;
        canBeAutoIncrement: boolean;
        canBeReferencedInPrimaryKey: boolean;
        disabledPrimaryKey: boolean;
        canHaveDefaultValue: boolean;
        hasLength?: undefined;
        min?: undefined;
        max?: undefined;
        defaultSuggestions?: undefined;
    } | {
        name: string;
        value: string;
        canBeAutoIncrement: boolean;
        canBeReferencedInPrimaryKey: boolean;
        disabledPrimaryKey: boolean;
        canHaveDefaultValue?: undefined;
        alias?: undefined;
        hasLength?: undefined;
        min?: undefined;
        max?: undefined;
        defaultSuggestions?: undefined;
    } | {
        name: string;
        value: string;
        alias: string;
        canBeAutoIncrement: boolean;
        canBeReferencedInPrimaryKey: boolean;
        disabledPrimaryKey: boolean;
        hasLength: boolean;
        min: number;
        max: number;
        canHaveDefaultValue: boolean;
        defaultSuggestions?: undefined;
    } | {
        name: string;
        value: string;
        canBeAutoIncrement: boolean;
        canBeReferencedInPrimaryKey: boolean;
        disabledPrimaryKey: boolean;
        hasLength: boolean;
        min: number;
        max: number;
        canHaveDefaultValue: boolean;
        alias?: undefined;
        defaultSuggestions?: undefined;
    } | {
        name: string;
        value: string;
        canBeAutoIncrement: boolean;
        canBeReferencedInPrimaryKey: boolean;
        disabledPrimaryKey: boolean;
        canHaveDefaultValue: boolean;
        defaultSuggestions: string[];
        alias?: undefined;
        hasLength?: undefined;
        min?: undefined;
        max?: undefined;
    })[];
    export { POSTGRESQL_1 as POSTGRESQL };
    const MYSQL_1: ({
        name: string;
        value: string;
        canBeAutoIncrement: boolean;
        canBeReferencedInPrimaryKey: boolean;
        disabledPrimaryKey: boolean;
        canHaveDefaultValue: boolean;
        hasLength?: undefined;
        min?: undefined;
        max?: undefined;
        alias?: undefined;
        defaultSuggestions?: undefined;
    } | {
        name: string;
        value: string;
        canBeAutoIncrement: boolean;
        hasLength: boolean;
        min: number;
        max: number;
        canBeReferencedInPrimaryKey: boolean;
        disabledPrimaryKey: boolean;
        canHaveDefaultValue: boolean;
        alias?: undefined;
        defaultSuggestions?: undefined;
    } | {
        name: string;
        value: string;
        alias: string;
        canBeAutoIncrement: boolean;
        canBeReferencedInPrimaryKey: boolean;
        disabledPrimaryKey: boolean;
        hasLength: boolean;
        min: number;
        max: number;
        canHaveDefaultValue: boolean;
        defaultSuggestions?: undefined;
    } | {
        name: string;
        value: string;
        canBeAutoIncrement: boolean;
        canBeReferencedInPrimaryKey: boolean;
        disabledPrimaryKey: boolean;
        canHaveDefaultValue: boolean;
        defaultSuggestions: string[];
        hasLength?: undefined;
        min?: undefined;
        max?: undefined;
        alias?: undefined;
    })[];
    export { MYSQL_1 as MYSQL };
}
export function getSqlTypesByDBClient(client: any): any;
export namespace allowedOrderDirectionsKeys {
    const asc_nulls_first: string;
    const asc_nulls_last: string;
    const desc_nulls_first: string;
    const desc_nulls_last: string;
    const ASC: string;
    const DESC: string;
    const asc: string;
    const desc: string;
}
export namespace SupportedAggregations {
    const _count: string;
    const _min: string;
    const _max: string;
    const _avg: string;
    const _sum: string;
}
export namespace SELF_UPDATE_OPERATORS {
    const _inc: string;
    const _dec: string;
    const _mult: string;
    const _div: string;
}
export namespace EVENTS {
    const SELECT: string;
    const UPDATE: string;
    const INSERT: string;
    const DELETE: string;
    const ERROR: string;
}
